---
- name: Install and Configure PostgreSQL
  hosts: all
  become: yes
  vars:
    postgresql_version: "16"  # Supported versions: 12-16
    postgresql_db_name: "mydatabase"
    postgresql_db_user: "dbuser"
    postgresql_db_password: "securepassword"  # Use vault for production!
    postgresql_listen_addresses: "localhost"  # Or '*' for remote access

  tasks:
    - name: Add PostgreSQL repository
      apt_repository:
        repo: "deb https://apt.postgresql.org/pub/repos/apt {{ ansible_distribution_release }}-pgdg main"
        filename: postgresql.list
        state: present
        update_cache: yes

    - name: Import PostgreSQL GPG key
      apt_key:
        url: "https://www.postgresql.org/media/keys/ACCC4CF8.asc"
        state: present

    - name: Install PostgreSQL
      apt:
        name: "postgresql-{{ postgresql_version }} postgresql-contrib-{{ postgresql_version }}"
        state: present
        update_cache: yes

    - name: Ensure PostgreSQL service is running
      service:
        name: "postgresql@{{ postgresql_version }}-main"
        state: restarted
        enabled: yes

    - name: Configure PostgreSQL listen addresses
      lineinfile:
        path: "/etc/postgresql/{{ postgresql_version }}/main/postgresql.conf"
        regexp: "^listen_addresses ="
        line: "listen_addresses = '{{ postgresql_listen_addresses }}'"
      notify: Restart PostgreSQL

    - name: Configure client authentication
      lineinfile:
        path: "/etc/postgresql/{{ postgresql_version }}/main/pg_hba.conf"
        line: "host {{ postgresql_db_name }} {{ postgresql_db_user }} 0.0.0.0/0 scram-sha-256"
      notify: Restart PostgreSQL

    - name: Install Python PostgreSQL client
      apt:
        name: python3-psycopg2
        state: present

    - name: Create PostgreSQL database
      postgresql_db:
        name: "{{ postgresql_db_name }}"
        encoding: "UTF-8"
        lc_collate: "en_US.UTF-8"
        lc_ctype: "en_US.UTF-8"
        state: present

    - name: Create PostgreSQL user
      postgresql_user:
        name: "{{ postgresql_db_user }}"
        password: "{{ postgresql_db_password }}"
        db: "{{ postgresql_db_name }}"
        priv: "ALL"
        state: present

    - name: Verify PostgreSQL connection
      postgresql_query:
        query: "SELECT version();"
        login_user: "{{ postgresql_db_user }}"
        login_password: "{{ postgresql_db_password }}"
        login_db: "{{ postgresql_db_name }}"
      register: pg_version
      changed_when: false

    - name: Show PostgreSQL version
      debug:
        msg: "PostgreSQL version: {{ pg_version.query_result[0]['version'] }}"

  handlers:
    - name: Restart PostgreSQL
      service:
        name: "postgresql@{{ postgresql_version }}-main"
        state: restarted